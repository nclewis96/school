#
# Makefile for Generating C++ executables
#
# F15 CSCI 232 - Data Structures and Algorithms
# Phillip J. Curtiss, Associate Professor
# Computer Science Department, Montana Tech
# Museum Buildings, Room 105
#
# Project-2: C++ Review of Abstract Classes and Templates
# Date Assigned: 2015-09-08
# Date Due: 2015-09-16 @ 5:00p

# Define Macros related to printing and submitting programs
a2ps	= a2ps -T 2
mail	= mail 
addr	= pcurtiss@mtech.edu rmoon@mtech.edu
tar	= tar -cvzf

# Define Macros to help generate the program file required
DIA	= dia2code
C++	= g++ -std=c++11
CFLAGS	= -Wall -Werror
LD	= g++
LDFLAGS	= 
LIBS	= 
OBJS	= BagDriver.o io_functions.o Bag.o
EXEC	= proj2

# Provide dependency lists here, one on each line - don't forget to make sure
# if you have source files depending (or generated by) UML diagrams to include them as well
.SUFFIXES:	.dia
all:		$(EXEC)
Bag.o:		Bag.h BagInterface.h
BagDriver.o:	Bag.h BagInterface.h
io_functions.o: io_functions.h

################################################################
# Rules Used to Generate executable from object - DO NOT EDIT 
$(EXEC):	$(OBJS)
	$(LD) $(LDFLAGS) -o $@ $? $(LIBS)

# Rule to generate object code from cpp source files - DO NOT EDIT
.cpp.o:		
	$(C++) $(CFLAGS) -c $<

# Rule to generate header and source files from Dia UML Diagram - DO NOT EDIT
.dia.h:		
	$(DIA) -t cpp $<

.dia.cpp:	
	$(DIA) -t cpp $<
################################################################

# Rule to Clean up (i.e. delete) all of the object and execuable
# code files to force make to rebuild a clearn executable only 
# from the source files
clean:
	rm -f $(OBJS) $(EXEC)

# Rule to submit programming assignments to graders
# Make sure you modify the $(subj) $(msg) above and the list of attachment
# files in the following rule - each file needs to be preceeded with an
# -a flag as shown
subj	= "CSCI232 DSA - Proj2"
msg	= "Please review and grade my Project-2 Submission"
submit:	Bag.h BagInterface.h Bag.cpp BagDriver.cpp io_functions.h io_functions.cpp 	
	$(tar) $(USER)-proj2.tgz $?
	echo $(msg) | $(mail) -s $(subj) -a $(USER)-proj2.tgz $(addr)

print:	Bag.h BagInterface.h Bag.cpp BagDriver.cpp io_functions.h io_functions.cpp
	$(a2ps) $?
